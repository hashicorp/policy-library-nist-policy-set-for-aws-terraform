# This policy checks if resources of type 'aws_redshift_cluster' have the 'allow_version_upgrade'
# attribute set to true

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":                   "redshift-cluster-maintenance-settings-check",
	"message":                       "Attribute 'allow_version_upgrade' should be true for AWS Redshift Cluster. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/redshift-controls.html#redshift-6 for more details.",
	"resource_aws_redshift_cluster": "aws_redshift_cluster",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		return maps.get(res, "values.allow_version_upgrade", true) is true
	})
}

# Variables

redshift_clusters = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_redshift_cluster).resources
violations = get_violations(redshift_clusters)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs
print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
