# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

resources = {
	"module.nf.aws_networkfirewall_firewall.example": {
		"address": "module.nf.aws_networkfirewall_firewall.example",
		"config": {
			"firewall_policy_arn": {
				"references": [
					"aws_networkfirewall_firewall_policy.example.arn",
					"aws_networkfirewall_firewall_policy.example",
				],
			},
			"name": {
				"constant_value": "example",
			},
			"subnet_mapping": [
				{
					"subnet_id": {
						"references": [
							"aws_subnet.example.id",
							"aws_subnet.example",
						],
					},
				},
			],
			"tags": {
				"constant_value": {
					"Tag1": "Value1",
					"Tag2": "Value2",
				},
			},
			"timeouts": {
				"constant_value": null,
			},
			"vpc_id": {
				"references": [
					"aws_vpc.example.id",
					"aws_vpc.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_networkfirewall_firewall",
	},
	"module.nf.aws_networkfirewall_firewall_policy.example": {
		"address": "module.nf.aws_networkfirewall_firewall_policy.example",
		"config": {
			"firewall_policy": [
				{
					"stateless_default_actions": {
						"constant_value": [
							"aws:pass",
						],
					},
					"stateless_fragment_default_actions": {
						"constant_value": [
							"aws:drop",
						],
					},
					"stateless_rule_group_reference": [
						{
							"priority": {
								"constant_value": 1,
							},
							"resource_arn": {
								"references": [
									"aws_networkfirewall_rule_group.example.arn",
									"aws_networkfirewall_rule_group.example",
								],
							},
						},
					],
					"tls_inspection_configuration_arn": {
						"constant_value": "arn:aws:network-firewall:REGION:ACCT:tls-configuration/example",
					},
				},
			],
			"name": {
				"constant_value": "example",
			},
			"tags": {
				"constant_value": {
					"Tag1": "Value1",
					"Tag2": "Value2",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_networkfirewall_firewall_policy",
	},
	"module.nf.aws_networkfirewall_logging_configuration.example": {
		"address": "module.nf.aws_networkfirewall_logging_configuration.example",
		"config": {
			"firewall_arn": {
				"references": [
					"aws_networkfirewall_firewall.example.arn",
					"aws_networkfirewall_firewall.example",
				],
			},
			"logging_configuration": [
				{
					"log_destination_config": [
						{
							"log_destination": {
								"references": [
									"aws_s3_bucket.example.bucket",
									"aws_s3_bucket.example",
								],
							},
							"log_destination_type": {
								"constant_value": "S3",
							},
							"log_type": {
								"constant_value": "FLOW",
							},
						},
					],
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_networkfirewall_logging_configuration",
	},
	"module.nf.aws_networkfirewall_rule_group.example": {
		"address": "module.nf.aws_networkfirewall_rule_group.example",
		"config": {
			"capacity": {
				"constant_value": 100,
			},
			"name": {
				"constant_value": "example",
			},
			"rule_group": [
				{
					"rules_source": [
						{
							"rules_source_list": [
								{
									"generated_rules_type": {
										"constant_value": "DENYLIST",
									},
									"target_types": {
										"constant_value": [
											"HTTP_HOST",
										],
									},
									"targets": {
										"constant_value": [
											"test.example.com",
										],
									},
								},
							],
						},
					],
				},
			],
			"tags": {
				"constant_value": {
					"Tag1": "Value1",
					"Tag2": "Value2",
				},
			},
			"type": {
				"constant_value": "STATEFUL",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_networkfirewall_rule_group",
	},
	"module.nf.aws_s3_bucket.example": {
		"address": "module.nf.aws_s3_bucket.example",
		"config": {
			"bucket": {
				"constant_value": "my-tf-test-bucket",
			},
			"tags": {
				"constant_value": {
					"Environment": "Dev",
					"Name":        "My bucket",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
	"module.nf.aws_subnet.example": {
		"address": "module.nf.aws_subnet.example",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.1.0/24",
			},
			"tags": {
				"constant_value": {
					"Name": "Main",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.example.id",
					"aws_vpc.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.nf.aws_vpc.example": {
		"address": "module.nf.aws_vpc.example",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.0.0/16",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nf",
		"name":                "example",
		"provider_config_key": "module.nf:aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
}
