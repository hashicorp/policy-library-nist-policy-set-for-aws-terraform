# This policy ensures that resources of type 'aws_networkfirewall_firewall_policy' have
# default stateless action should be 'aws:drop' or 'aws:forward_to_sfe' for full packets

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":                                  "network-firewall-policy-default-action-full-packets",
	"resource_aws_networkfirewall_firewall_policy": "aws_networkfirewall_firewall_policy",
	"message": "'aws_networkfirewall_firewall' default stateless action should be 'aws:drop' or 'aws:forward_to_sfe'. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/networkfirewall-controls.html#networkfirewall-4 for more details.",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		firewall_policy = maps.get(res, "values.firewall_policy", [])
		if firewall_policy is null or firewall_policy is empty {
			return false
		}
		default_stateless_action = maps.get(firewall_policy[0], "stateless_default_actions", [])
		return default_stateless_action not contains "aws:pass"
	})
}

# Variables

aws_networkfirewall_firewall_policies = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_networkfirewall_firewall_policy).resources
violations = get_violations(aws_networkfirewall_firewall_policies)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
