# This policy ensures that resources of type 'aws_networkfirewall_firewall' have
# logging enabled

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfconfig/v2" as tfconfig
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps
import "strings"

# Constants
const = {
	"policy_name":                                        "network-firewall-logging-enabled",
	"resource_aws_networkfirewall_firewall":              "aws_networkfirewall_firewall",
	"resource_aws_networkfirewall_logging_configuration": "aws_networkfirewall_logging_configuration",
	"module_prefix":                                      "module.",
	"message":                                            "'aws_networkfirewall_firewall' resources should have logging enabled. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/networkfirewall-controls.html#networkfirewall-2 for more details.",
}

# Functions

get_referenced_resource_address = func(res, attr) {
	references_list = maps.get(res, attr, [])
	if references_list is empty {
		return ""
	}

	referenced_address = references_list[1]
	if strings.has_prefix(res.address, const.module_prefix) {
		referenced_address = res.module_address + "." + referenced_address
	}

	return referenced_address
}

# Variables

config_resources = tf.config(tfconfig.resources)

// Get resources of type 'aws_networkfirewall_logging_configuration' from tfconfig
aws_networkfirewall_logging_configurations = config_resources.type(const.resource_aws_networkfirewall_logging_configuration).resources

// Get aws_networkfirewall_firewall references from the aws_networkfirewall_logging_configuration resources
referenced_networkfirewall_firewalls = []
for aws_networkfirewall_logging_configurations as _, aws_networkfirewall_logging_configuration {
	referenced_firewall_addr = get_referenced_resource_address(aws_networkfirewall_logging_configuration, "config.firewall_arn.references")
	if referenced_firewall_addr is empty {
		continue
	}

	append(referenced_networkfirewall_firewalls, referenced_firewall_addr)
}

// Get all the aws_networkfirewall_firewall resources
aws_networkfirewall_firewalls = config_resources.type(const.resource_aws_networkfirewall_firewall).resources

violations = collection.reject(aws_networkfirewall_firewalls, func(res) {
	return res.address in referenced_networkfirewall_firewalls
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
