# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-west-2",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_backup_plan.example": {
		"address": "aws_backup_plan.example",
		"config": {
			"name": {
				"constant_value": "ebs-backup-plan",
			},
			"rule": [
				{
					"lifecycle": [
						{
							"cold_storage_after": {
								"constant_value": 30,
							},
							"delete_after": {
								"constant_value": 120,
							},
						},
					],
					"rule_name": {
						"constant_value": "daily-backup",
					},
					"schedule": {
						"constant_value": "cron(0 12 * * ? *)",
					},
					"target_vault_name": {
						"references": [
							"aws_backup_vault.example.name",
							"aws_backup_vault.example",
						],
					},
				},
				{
					"lifecycle": [
						{
							"cold_storage_after": {
								"constant_value": 90,
							},
							"delete_after": {
								"constant_value": 365,
							},
						},
					],
					"rule_name": {
						"constant_value": "weekly-backup",
					},
					"schedule": {
						"constant_value": "cron(0 0 ? * SUN *)",
					},
					"target_vault_name": {
						"references": [
							"aws_backup_vault.example.name",
							"aws_backup_vault.example",
						],
					},
				},
			],
			"tags": {
				"constant_value": {
					"Environment": "production",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_backup_plan",
	},
	"aws_backup_selection.example": {
		"address": "aws_backup_selection.example",
		"config": {
			"iam_role_arn": {
				"references": [
					"aws_iam_role.backup_role.arn",
					"aws_iam_role.backup_role",
				],
			},
			"name": {
				"constant_value": "ebs-backup-selection",
			},
			"plan_id": {
				"references": [
					"aws_backup_plan.example.id",
					"aws_backup_plan.example",
				],
			},
			"resources": {
				"references": [
					"aws_ebs_volume.example.arn",
					"aws_ebs_volume.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_backup_selection",
	},
	"aws_backup_vault.example": {
		"address": "aws_backup_vault.example",
		"config": {
			"name": {
				"constant_value": "example-backup-vault",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_backup_vault",
	},
	"aws_ebs_volume.example": {
		"address": "aws_ebs_volume.example",
		"config": {
			"availability_zone": {
				"constant_value": "us-west-2a",
			},
			"encrypted": {
				"constant_value": true,
			},
			"size": {
				"constant_value": 20,
			},
			"tags": {
				"constant_value": {
					"Backup":      "true",
					"Environment": "production",
					"Name":        "example-volume",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_ebs_volume",
	},
	"aws_iam_role.backup_role": {
		"address": "aws_iam_role.backup_role",
		"config": {
			"assume_role_policy": {
				"constant_value": null,
			},
			"name": {
				"constant_value": "backup-role",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "backup_role",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"aws_iam_role_policy_attachment.backup_policy": {
		"address": "aws_iam_role_policy_attachment.backup_policy",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
			},
			"role": {
				"references": [
					"aws_iam_role.backup_role.name",
					"aws_iam_role.backup_role",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "backup_policy",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
