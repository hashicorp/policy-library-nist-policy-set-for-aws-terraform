# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_network_acl.main": {
		"address": "aws_network_acl.main",
		"config": {
			"egress": {
				"constant_value": [
					{
						"action":          "allow",
						"cidr_block":      "10.3.0.0/18",
						"from_port":       443,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": null,
						"protocol":        "tcp",
						"rule_no":         200,
						"to_port":         443,
					},
				],
			},
			"ingress": {
				"constant_value": [
					{
						"action":          "allow",
						"cidr_block":      "10.3.0.0/18",
						"from_port":       80,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": null,
						"protocol":        "tcp",
						"rule_no":         100,
						"to_port":         80,
					},
				],
			},
			"subnet_ids": {
				"references": [
					"aws_subnet.main.id",
					"aws_subnet.main",
				],
			},
			"tags": {
				"constant_value": {
					"Name": "main",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.main.id",
					"aws_vpc.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"aws_subnet.main": {
		"address": "aws_subnet.main",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.1.0/24",
			},
			"map_public_ip_on_launch": {
				"constant_value": false,
			},
			"tags": {
				"constant_value": {
					"Name": "Main",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.main.id",
					"aws_vpc.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_vpc.main": {
		"address": "aws_vpc.main",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.0.0/16",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
