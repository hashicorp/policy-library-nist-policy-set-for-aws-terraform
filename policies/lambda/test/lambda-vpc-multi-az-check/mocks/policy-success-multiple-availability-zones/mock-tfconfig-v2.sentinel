# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_iam_role.lambda_exec": {
		"address": "aws_iam_role.lambda_exec",
		"config": {
			"assume_role_policy": {
				"constant_value": null,
			},
			"name": {
				"constant_value": "lambda_execution_role",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "lambda_exec",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"aws_lambda_function.vpc_lambda": {
		"address": "aws_lambda_function.vpc_lambda",
		"config": {
			"filename": {
				"constant_value": "lambda_function_payload.zip",
			},
			"function_name": {
				"constant_value": "vpc-lambda-multi-az",
			},
			"handler": {
				"constant_value": "index.handler",
			},
			"role": {
				"references": [
					"aws_iam_role.lambda_exec.arn",
					"aws_iam_role.lambda_exec",
				],
			},
			"runtime": {
				"constant_value": "nodejs18.x",
			},
			"vpc_config": [
				{
					"security_group_ids": {
						"references": [
							"aws_security_group.lambda_sg.id",
							"aws_security_group.lambda_sg",
						],
					},
					"subnet_ids": {
						"references": [
							"aws_subnet.az1.id",
							"aws_subnet.az1",
							"aws_subnet.az2.id",
							"aws_subnet.az2",
						],
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "vpc_lambda",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_lambda_function",
	},
	"aws_security_group.lambda_sg": {
		"address": "aws_security_group.lambda_sg",
		"config": {
			"description": {
				"constant_value": "Allow internal VPC traffic",
			},
			"name": {
				"constant_value": "lambda_sg",
			},
			"vpc_id": {
				"references": [
					"aws_vpc.example.id",
					"aws_vpc.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "lambda_sg",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"aws_subnet.az1": {
		"address": "aws_subnet.az1",
		"config": {
			"availability_zone": {
				"constant_value": "us-east-1a",
			},
			"cidr_block": {
				"constant_value": "10.0.1.0/24",
			},
			"vpc_id": {
				"references": [
					"aws_vpc.example.id",
					"aws_vpc.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "az1",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_subnet.az2": {
		"address": "aws_subnet.az2",
		"config": {
			"availability_zone": {
				"constant_value": "us-east-1b",
			},
			"cidr_block": {
				"constant_value": "10.0.2.0/24",
			},
			"vpc_id": {
				"references": [
					"aws_vpc.example.id",
					"aws_vpc.example",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "az2",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_vpc.example": {
		"address": "aws_vpc.example",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.0.0/16",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
