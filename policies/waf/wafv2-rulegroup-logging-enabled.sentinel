# This policy requires resources of type `aws_wafv2_rule_group` have attribute 'cloudwatch_metrics_enabled' set to true.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":                   "wafv2-rulegroup-logging-enabled",
	"message":                       "Attribute 'visibility_config.cloudwatch_metrics_enabled' must be set to true for 'aws_wafv2_rule_group' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/waf-controls.html#waf-12 for more details.",
	"resource_aws_wafv2_rule_group": "aws_wafv2_rule_group",
	"visibility_config":             "visibility_config",
	"cloudwatch_metrics_enabled":    "cloudwatch_metrics_enabled",
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_wafv2_rule_group).resources
violations = collection.reject(resources, func(res) {
	visibility_config = maps.get(res.values, const.visibility_config, null)
	if visibility_config is null {
		return true
	}
	return maps.get(visibility_config[0], const.cloudwatch_metrics_enabled, false) is true
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
