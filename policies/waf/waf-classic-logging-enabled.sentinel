# This policy checks whether logging is enabled for an 'aws_waf_web_acl'.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":              "waf-classic-logging-enabled",
	"message":                  "Logging should be enabled for an AWS WAF global web ACL. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/waf-controls.html#waf-1 for more details.",
	"resource_aws_waf_web_acl": "aws_waf_web_acl",
	"logging_configuration":    "logging_configuration",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		logging_configuration = maps.get(res.values, const.logging_configuration, [])
		return logging_configuration is not empty and logging_configuration is not null
	})
}

# Variables

aws_waf_web_acl = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_waf_web_acl).resources
violations = get_violations(aws_waf_web_acl)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
