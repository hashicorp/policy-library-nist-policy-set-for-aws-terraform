# This policy checks if 'aws_apigatewayv2_route' have an authorization type.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":                     "api-gateway-routes-should-specify-an-authorization-type",
	"resource_aws_apigatewayv2_route": "aws_apigatewayv2_route",
	"message":                         "API Gateway routes should specify an authorization type for resource 'aws_apigatewayv2_route'. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/apigateway-controls.html#apigateway-8 for more details.",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		authorization_type = maps.get(res, "values.authorization_type", "NONE")
		return authorization_type is not "NONE"
	})
}

# Variables

aws_apigatewayv2_route = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_apigatewayv2_route).resources
violations = get_violations(aws_apigatewayv2_route)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
