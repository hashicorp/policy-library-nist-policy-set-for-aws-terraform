# This policy checks if resources of type 'aws_docdb_cluster' have the 'enabled_cloudwatch_logs_exports attribute'
# set to 'audit'

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps
import "json"

# Constants

const = {
	"policy_name":                "docdb-cluster-audit-logging-enabled",
	"message":                    "Attribute 'enabled_cloudwatch_logs_exports' should be 'audit' for AWS DocumentDb Cluster. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/documentdb-controls.html#documentdb-4 for more details.",
	"resource_aws_docdb_cluster": "aws_docdb_cluster",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		cloudwatch_logs_values = maps.get(res, "values.enabled_cloudwatch_logs_exports", [])
		if cloudwatch_logs_values is null or cloudwatch_logs_values is empty {
			return false
		}
		return cloudwatch_logs_values contains "audit"
	})
}

# Variables

documentdb_clusters = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_docdb_cluster).resources
violations = get_violations(documentdb_clusters)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
