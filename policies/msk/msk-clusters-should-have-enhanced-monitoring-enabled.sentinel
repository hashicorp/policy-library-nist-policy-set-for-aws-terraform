# This policy checks if resources of type 'aws_msk_cluster' have the 'enhanced monitoring' should
# be not set to 'DEFAULT' or 'PER_BROKER' in the monitoring configuration.

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":               "msk-clusters-should-have-enhanced-monitoring-enabled",
	"message":                   "Attribute 'enhanced monitoring' should not be set to 'DEFAULT' or 'PER_BROKER' in the monitoring configuration for AWS MSK Cluster. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/msk-controls.html#msk-2 for more details.",
	"resource_aws_msk_cluster":  "aws_msk_cluster",
	"enhanced_monitoring":       "enhanced_monitoring",
	"invalid_monitoring_values": ["DEFAULT", "PER_BROKER"],
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		return maps.get(res.values, const.enhanced_monitoring, "DEFAULT") not in const.invalid_monitoring_values
	})
}

# Variables

msk_clusters = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_msk_cluster).resources
violations = get_violations(msk_clusters)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs
print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
