# This policy checks if resources of type 'aws_mq_broker' have the attribute 'logs' with parameter
# 'audit' set to true

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps
import "json"

# Constants

const = {
	"policy_name":            "mq-cloudwatch-audit-log-enabled",
	"message":                "Attribute 'logs' with parameter 'audit' should be true for AWS ActiveMQ Broker. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/mq-controls.html#mq-2 for more details.",
	"resource_aws_mq_broker": "aws_mq_broker",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		mq_broker_logs_values = maps.get(res, "values.logs", {})
		return mq_broker_logs_values is not empty and mq_broker_logs_values[0].audit is "true"
	})
}

# Variables

mq_brokers = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_mq_broker).resources
violations = get_violations(mq_brokers)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
