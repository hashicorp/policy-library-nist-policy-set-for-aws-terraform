# This policy checks if 'aws_eks_cluster' resources have
# their unrestricted public endpoint access

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":               "eks-cluster-endpoints-restrict-public-access",
	"message":                   "Audit logging must be enabled for aws_eks_cluster resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/eks-controls.html#eks-8 for more details.",
	"resource_aws_eks_cluster":  "aws_eks_cluster",
	"enabled_cluster_log_types": "enabled_cluster_log_types",
	"audit":                     "audit",
}

# Variables

eks_clusters = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_eks_cluster).resources

eks_clusters_without_audit_logging_enabled = collection.reject(eks_clusters, func(res) {
	enabled_log_types = maps.get(res["values"], const.enabled_cluster_log_types, [])
	if enabled_log_types is null {
		return false
	}

	return enabled_log_types contains const.audit
})

summary = {
	"policy_name": const.policy_name,
	"violations": map eks_clusters_without_audit_logging_enabled as _, res {
		{
			"address":        res.address,
			"module_address": res.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	eks_clusters_without_audit_logging_enabled is empty
}
