# This policy checks if resources of type 'aws_elb' have the attribute
# 'cross_zone_load_balancing' set to true

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":      "elb-connection-draining-enabled",
	"message":          "Classic load balancers should have cross zone load balancing enabled. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/elb-controls.html#elb-9 for more details.",
	"resource_aws_elb": "aws_elb",
}

# Variables

classic_load_balancers = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_elb).resources

invalid_load_balancers = collection.reject(classic_load_balancers, func(res) {
	return maps.get(res, "values.cross_zone_load_balancing", true) is true
})

summary = {
	"policy_name": const.policy_name,
	"violations": map invalid_load_balancers as _, res {
		{
			"address":        res.address,
			"module_address": res.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	invalid_load_balancers is empty
}
