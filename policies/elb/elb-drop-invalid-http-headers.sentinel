# This policy checks if application load balancers are configured
# to drop invalid HTTP headers

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":     "elb-drop-invalid-http-headers",
	"message":         "Application load balancers should be configured to drop invalid HTTP headers. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/elb-controls.html#elb-4 for more details.",
	"resource_aws_lb": "aws_lb",
	"application":     "application",
}

# Variables

aws_load_balancers = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_lb).resources

invalid_alb_resources = collection.reject(aws_load_balancers, func(res) {
	lb_type = maps.get(res, "values.load_balancer_type", const.application)

	# This control only checks application LBs
	if lb_type is not const.application {
		return true
	}

	return maps.get(res, "values.drop_invalid_header_fields", false) is true
})

summary = {
	"policy_name": const.policy_name,
	"violations": map invalid_alb_resources as _, res {
		{
			"address":        res.address,
			"module_address": res.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	invalid_alb_resources is empty
}
