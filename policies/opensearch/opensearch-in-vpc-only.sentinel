# This policy checks whether OpenSearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfconfig/v2" as tfconfig
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":                    "opensearch-in-vpc-only",
	"resource_aws_opensearch_domain": "aws_opensearch_domain",
	"message":                        "OpenSearch domains should be in VPC. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/opensearch-controls.html#opensearch-2 for more details.",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		vpc_options = maps.get(res, "config.vpc_options", [])
		if vpc_options is empty {
			return false
		}
		subnet_ids = maps.get(vpc_options[0], "subnet_ids", {})
		references = maps.get(subnet_ids, "references", [])
		return references is not empty
	})
}

# Variables

aws_opensearch_domain = tf.config(tfconfig.resources).type(const.resource_aws_opensearch_domain).resources
violations = get_violations(aws_opensearch_domain)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
