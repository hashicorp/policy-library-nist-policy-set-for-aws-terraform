# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_opensearch_domain.private_domain": {
		"address": "aws_opensearch_domain.private_domain",
		"config": {
			"cluster_config": [
				{
					"instance_count": {
						"constant_value": 2,
					},
					"instance_type": {
						"constant_value": "t3.small.search",
					},
					"zone_awareness_config": [
						{
							"availability_zone_count": {
								"constant_value": 2,
							},
						},
					],
					"zone_awareness_enabled": {
						"constant_value": true,
					},
				},
			],
			"domain_endpoint_options": [
				{
					"enforce_https": {
						"constant_value": true,
					},
					"tls_security_policy": {
						"constant_value": "Policy-Min-TLS-1-2-2019-07",
					},
				},
			],
			"domain_name": {
				"constant_value": "private-example",
			},
			"ebs_options": [
				{
					"ebs_enabled": {
						"constant_value": true,
					},
					"volume_size": {
						"constant_value": 20,
					},
					"volume_type": {
						"constant_value": "gp3",
					},
				},
			],
			"encrypt_at_rest": [
				{
					"enabled": {
						"constant_value": true,
					},
				},
			],
			"engine_version": {
				"constant_value": "OpenSearch_1.3",
			},
			"node_to_node_encryption": [
				{
					"enabled": {
						"constant_value": true,
					},
				},
			],
			"tags": {
				"constant_value": {
					"Environment": "dev",
					"Owner":       "team-name",
					"Project":     "search",
				},
			},
			"vpc_options": [
				{
					"subnet_ids": {
						"constant_value": [],
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "private_domain",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_opensearch_domain",
	},
	"aws_security_group.opensearch_sg": {
		"address": "aws_security_group.opensearch_sg",
		"config": {
			"description": {
				"constant_value": "Allow internal traffic to OpenSearch",
			},
			"egress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        0,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "-1",
						"security_groups":  null,
						"self":             null,
						"to_port":          0,
					},
				],
			},
			"ingress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      null,
						"from_port":        443,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             null,
						"to_port":          443,
					},
				],
			},
			"name": {
				"constant_value": "opensearch-sg",
			},
			"tags": {
				"constant_value": {
					"Name": "opensearch-sg",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.main.id",
					"aws_vpc.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "opensearch_sg",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"aws_subnet.private_1": {
		"address": "aws_subnet.private_1",
		"config": {
			"availability_zone": {
				"constant_value": "us-east-1a",
			},
			"cidr_block": {
				"constant_value": "10.0.1.0/24",
			},
			"map_public_ip_on_launch": {
				"constant_value": false,
			},
			"tags": {
				"constant_value": {
					"Name": "private-subnet-1",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.main.id",
					"aws_vpc.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "private_1",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_subnet.private_2": {
		"address": "aws_subnet.private_2",
		"config": {
			"availability_zone": {
				"constant_value": "us-east-1b",
			},
			"cidr_block": {
				"constant_value": "10.0.2.0/24",
			},
			"map_public_ip_on_launch": {
				"constant_value": false,
			},
			"tags": {
				"constant_value": {
					"Name": "private-subnet-2",
				},
			},
			"vpc_id": {
				"references": [
					"aws_vpc.main.id",
					"aws_vpc.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "private_2",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_vpc.main": {
		"address": "aws_vpc.main",
		"config": {
			"cidr_block": {
				"constant_value": "10.0.0.0/16",
			},
			"enable_dns_hostnames": {
				"constant_value": true,
			},
			"enable_dns_support": {
				"constant_value": true,
			},
			"tags": {
				"constant_value": {
					"Name": "main-vpc",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
