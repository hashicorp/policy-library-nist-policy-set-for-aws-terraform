# This control checks whether an Amazon RDS for MariaDB DB instance is configured to publish certain types of logs to Amazon CloudWatch Logs.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps
import "strings"

# Constants

const = {
	"policy_name":              "rds-for-mariadb-db-instances-should-publish-logs-to-cloudwatch-logs",
	"message":                  "RDS for MariaDB DB instances must be configured to publish logs to CloudWatch Logs. At minimum, 'audit' and 'error' log types should be enabled. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-42 for more details.",
	"resource_aws_db_instance": "aws_db_instance",
	"required_log_types":       ["audit", "error"],
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_db_instance).resources

violations = collection.filter(resources, func(res) {
	# Only apply to MariaDB instances
	engine = maps.get(res, "values.engine", "")
	if engine != "mariadb" {
		return false
	}

	# Check if logs are properly configured
	log_exports = maps.get(res, "values.enabled_cloudwatch_logs_exports", [])
	if log_exports is null or log_exports is [] {
		return true
	}

	# Check if required log types are included
	for const.required_log_types as required_log {
		if required_log not in log_exports {
			return true
		}
	}

	return false
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
