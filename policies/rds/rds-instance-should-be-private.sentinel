# This policy checks if the aws rds instances are publicly accessible

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants
const = {
	"policy_name":  "rds-instance-should-be-private",
	"message":      "Attribute 'publicly_accessible' should be false for aws_db_instance resource. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-2 for more details.",
	"rds_resource": "aws_db_instance",
}

# Functions

build_violation_object = func(res, message) {
	return {
		"address":        res.address,
		"module_address": res.module_address,
		"message":        message,
	}
}

# Variables

rds_resources = tf.plan(tfplan.planned_values.resources).type(const.rds_resource).resources
violations = collection.reject(rds_resources, func(res) {
	key_path = "values.publicly_accessible"
	# default value for publicly accessible is false
	return maps.get(res, key_path, false) is false
})

rds_violations = map violations as _, res {
	build_violation_object(res, const.message)
}

summary = {
	"policy_name": const.policy_name,
	"violations":  rds_violations,
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
