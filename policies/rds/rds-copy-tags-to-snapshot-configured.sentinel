# This policy requires resources of type `aws_rds_cluster` or `aws_db_instance` to have `copy_tags_to_snapshot` set to true

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Params

param resource default "aws_rds_cluster"

# Constants

const = {
	"policy_name": "rds-cluster-copy-tags-to-snapshot-configured",
	"message":     "Attribute 'copy_tags_to_snapshot' must be set to true for 'aws_rds_cluster' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-16 for more details.",
}

# Variables

if (resource == "aws_db_instance") {
	const["policy_name"] = "rds-instance-copy-tags-to-snapshot-configured"
	const["message"] = "Attribute 'copy_tags_to_snapshot' must be set to true for 'aws_db_instance' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-17 for more details."
}

resources = tf.plan(tfplan.planned_values.resources).type(resource).resources
violations = collection.reject(resources, func(res) {
	copy_tags_to_snapshot = maps.get(res, "values.copy_tags_to_snapshot", false)
	return copy_tags_to_snapshot is true
})

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	resource in ["aws_rds_cluster", "aws_db_instance"] and violations is empty
}
