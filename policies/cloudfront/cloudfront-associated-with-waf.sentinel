// This policy checks whether 'aws_cloudfront_distribution' are associated with either AWS WAF Classic or AWS WAF web ACLs.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

// Imports

import "tfconfig/v2" as tfconfig
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

// Constants

const = {
	"policy_name": "cloudfront-associated-with-waf",
	"message":     "'aws_cloudfront_distribution' are associated with either AWS WAF Classic or AWS WAF web ACLs. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/cloudfront-controls.html#cloudfront-6 for more details.",
	"resource_aws_cloudfront_distribution": "aws_cloudfront_distribution",
}

// Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		web_acl_id = maps.get(res.config, "web_acl_id", {})
		if web_acl_id is null or web_acl_id is empty {
			return false
		}
		references = maps.get(web_acl_id, "references", [])
		return references is not empty
	})
}

// Variables

config_resources = tf.config(tfconfig.resources)
cloudfront_distribution_resource = config_resources.type(const.resource_aws_cloudfront_distribution).resources

violations = get_violations(cloudfront_distribution_resource)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

// Outputs

print(report.generate_policy_report(summary))

// Rules

main = rule {
	violations is empty
}
